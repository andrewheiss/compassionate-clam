{
  "hash": "01b048f443aa0756259f65810fb00e89",
  "result": {
    "markdown": "---\ntitle: \"Issue area\"\n---\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(targets)\nlibrary(brms)\nlibrary(marginaleffects)\nlibrary(tidybayes)\nlibrary(ggdist)\nlibrary(patchwork)\nlibrary(scales)\n\n# Generated via random.org\nset.seed(196491)\n\n# Load targets\ntar_load(ongo)\ntar_load(m_full_ordbeta)\ninvisible(list2env(tar_read(graphic_functions), .GlobalEnv))\n\nprop_to_provinces <- function(x, lower = 1, upper = 32) {\n  (x * (upper - lower)) + lower\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npreds <- m_full_ordbeta |> \n  predicted_draws(datagrid(model = m_full_ordbeta, work_field_code1 = unique), \n                  ndraws = 4000)\n\n\nepreds <- m_full_ordbeta |> \n  epred_draws(datagrid(model = m_full_ordbeta, work_field_code1 = unique), \n              ndraws = 1000)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nepreds |> \n  ungroup() |> \n  mutate(work_field_code1 = fct_reorder(work_field_code1, .epred)) |> \n  ggplot(aes(x = .epred, y = work_field_code1)) +\n  stat_halfeye(fill = clrs[5]) +\n  scale_x_continuous(labels = label_percent(),\n                     sec.axis = sec_axis(trans = ~ prop_to_provinces(.),\n                                         name = \"Expected provinces\",\n                                         breaks = seq(8, 32, 4))) +\n  guides(fill = \"none\") +\n  labs(x = \"Expected proportion of provinces\", y = NULL) +\n  theme_ongo() +\n  theme(axis.ticks.x.top = element_line(linewidth = 0.25, color = \"grey50\"))\n```\n\n::: {.cell-output-display}\n![](analysis-issue_files/figure-html/plot-epred-issue-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npreds_issue_plot <- preds %>% \n  ungroup() %>% \n  mutate(outcome = case_when(\n    .prediction == 0 ~ \"1 province\",\n    .prediction > 0 & .prediction < 1 ~ \"1â€“32 provinces\",\n    .prediction == 1 ~ \"32 provinces\"\n  )) %>% \n  group_by(outcome, work_field_code1) %>% \n  summarize(count = n()) |> \n  group_by(work_field_code1) |> \n  mutate(prop = count / sum(count))\n\nggplot(preds_issue_plot, aes(x = work_field_code1, y = prop)) +\n  geom_segment(aes(xend = work_field_code1, yend = 0), color = \"grey50\") +\n  geom_point(color = clrs[5], size = 2) +\n  expand_limits(y = 0) +\n  facet_wrap(vars(outcome), ncol = 1) +\n  scale_x_discrete(labels = label_wrap(10)) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(x = NULL, y = \"Proportion of predictions\") +\n  theme_ongo()\n```\n\n::: {.cell-output-display}\n![](analysis-issue_files/figure-html/plot-pred-discrete-continuous-local-1.png){fig-align='center' width=80%}\n:::\n:::\n",
    "supporting": [
      "analysis-issue_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}