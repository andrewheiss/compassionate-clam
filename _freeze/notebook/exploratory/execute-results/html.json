{
  "hash": "ae3c13d5bee3f44806394bf758e9ce7a",
  "result": {
    "markdown": "---\ntitle: EDA\n---\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(targets)\nlibrary(here)\nlibrary(sf)\nlibrary(ggrepel)\n\n# Point to the _targets folder location since this qmd is in a subfolder\ntar_config_set(store = here::here('_targets'),\n               script = here::here('_targets.R'))\n\n# Load targets\ntar_load(ongo)\nmapdata <- tar_read(ongo_mapdata)\ninvisible(list2env(tar_read(graphic_functions), .GlobalEnv))\nset_annotation_fonts()\n```\n:::\n\n\n# Timeline of registration\n\nTODO\n\n\n# Distribution of outcome\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(ongo, aes(x = province_count)) +\n  geom_histogram(binwidth = 1, color = \"white\", size = 0.1, boundary = 0) +\n  labs(x = \"Number of provinces\", y = \"Count\",\n       title = \"Distribution of province counts\") +\n  theme_ongo()\n```\n\n::: {.cell-output-display}\n![](exploratory_files/figure-html/province-count-distribution-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n\n# Map of provinces and counts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Use aes(geometry) and stat = \"sf_coordinates\" to make geom_label_repel() work\n# with geom_sf(): https://github.com/slowkow/ggrepel/issues/111#issuecomment-416853013\nlabeldata <- mapdata |> \n  filter(ro_count > 0)\n\nplot_map <- ggplot() +\n  geom_sf(data = mapdata,\n          aes(fill = ro_count), color = \"white\") +\n  scale_fill_viridis_c(option = \"mako\", begin = 0.1, end = 0.9, direction = -1,\n                       guide = \"none\") +\n  geom_label_repel(data = labeldata, \n                   aes(label = ro_count, geometry = geometry),\n                   stat = \"sf_coordinates\",\n                   size = 3) +\n  theme_void()\nplot_map\n```\n\n::: {.cell-output-display}\n![](exploratory_files/figure-html/ongo-map-1.png){fig-align='center' width=2100}\n:::\n:::\n",
    "supporting": [
      "exploratory_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}