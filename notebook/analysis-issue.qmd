---
title: "Issue area"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align = "center", fig.retina = 3,
                      fig.width = 6, fig.height = (6 * 0.618),
                      out.width = "80%", collapse = TRUE,
                      dev = "png", dev.args = list(type = "cairo-png"))

options(digits = 3, width = 120,
        dplyr.summarise.inform = FALSE,
        knitr.kable.NA = "")
```

```{r load-libraries, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
library(brms)
library(marginaleffects)
library(tidybayes)
library(ggdist)
library(patchwork)
library(scales)

# Generated via random.org
set.seed(196491)

# Load targets
tar_load(ongo)
tar_load(c(m_full_ordbeta, preds_issue))
invisible(list2env(tar_read(graphic_functions), .GlobalEnv))

prop_to_provinces <- function(x, lower = 1, upper = 32) {
  (x * (upper - lower)) + lower
}
```

```{r plot-epred-issue}
epreds <- m_full_ordbeta |> 
  epred_draws(datagrid(model = m_full_ordbeta, work_field_code1 = unique), 
              ndraws = 1000)

epreds |> 
  ungroup() |> 
  mutate(work_field_code1 = fct_reorder(work_field_code1, .epred)) |> 
  ggplot(aes(x = .epred, y = work_field_code1)) +
  stat_halfeye(fill = clrs[5]) +
  scale_x_continuous(labels = label_percent(),
                     sec.axis = sec_axis(trans = ~ prop_to_provinces(.),
                                         name = "Expected provinces",
                                         breaks = seq(8, 32, 4))) +
  guides(fill = "none") +
  labs(x = "Expected proportion of provinces", y = NULL) +
  theme_ongo() +
  theme(axis.ticks.x.top = element_line(linewidth = 0.25, color = "grey50"))
```

```{r plot-pred-discrete-continuous-local, message=FALSE, fig.width=6, fig.height=6}
preds_issue_plot <- preds_issue |> 
  unnest(preds) |> 
  mutate(outcome = case_when(
    .prediction == 0 ~ "1 province",
    .prediction > 0 & .prediction < 1 ~ "1â€“32 provinces",
    .prediction == 1 ~ "32 provinces"
  )) %>% 
  group_by(outcome, work_field_code1, draw) %>% 
  summarize(count = n()) |> 
  group_by(work_field_code1) |> 
  mutate(prop = count / sum(count) * 100)

ggplot(preds_issue_plot, aes(x = work_field_code1, y = prop)) +
  stat_pointinterval(color = clrs[5], fatten_point = 1) +
  expand_limits(y = 0) +
  facet_wrap(vars(outcome), ncol = 1) +
  scale_x_discrete(labels = label_wrap(10)) +
  scale_y_continuous(labels = label_percent()) +
  labs(x = NULL, y = "Proportion of predictions") +
  theme_ongo()
```
